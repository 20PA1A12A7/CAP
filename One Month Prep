#WEEK1
1)PLUS MINUS
#!/bin/python3
import math
import os
import random
import re
import sys
def plusMinus(arr):
    count1,count2,count3=0,0,0
    for i in range(n):
        if(arr[i]>0):
            count1=count1+1
        if(arr[i]<0):
            count2=count2+1
        if(arr[i]==0):
            count3=count3+1 
    print(count1/n)
    print(count2/n)
    print(count3/n)
if __name__ == '__main__':
      n = int(input().strip())
      arr = list(map(int, input().rstrip().split()))
      plusMinus(arr)
      
2)MINI-MAX SUM
#!/bin/python3
import math
import os
import random
import re
import sys
def miniMaxSum(arr):
    sum1=0
    sum2=0
    arr.sort()
    for i in range(0,4):
        sum1=sum1+arr[i]
    for i in range(1,5):
        sum2=sum2+arr[i] 
    print(sum1,sum2)  
if __name__ == '__main__':
      arr = list(map(int, input().rstrip().split()))
      miniMaxSum(arr)
      
3)TIME CONVERSION
import math
import os
import random
import re
import sys
def timeConversion(s):
    p=s[:-2]
    p1=p[:2] 
    c=str(int(p1)+12)
    d=str(int(p1)-12)
    if(s[-2:]=="PM" and p[:2]!="12"):
        return p.replace(p1,c) 
    elif(s[-2:]=="AM" and p[:2]=="12"):
        return p.replace(p1,d+"0")
    else:
        return p
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')
    s = input()
    result = timeConversion(s)
    fptr.write(result+'\n')
    fptr.close()

4)SPARSE ARRAYS
import math
import os
import random
import re
import sys
def matchingStrings(strings, queries):
   l=[]
   for i in queries:
    if i in strings:
        l1=strings.count(i)
        l.append(l1)
    else:
        l1=0
        l.append(l1)
   return l
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')
    strings_count = int(input().strip())
    strings = []
    for _ in range(strings_count):
        strings_item = input()
        strings.append(strings_item)
    queries_count = int(input().strip())
    queries = []
    for _ in range(queries_count):
        queries_item = input()
        queries.append(queries_item)
    res = matchingStrings(strings, queries)
    fptr.write('\n'.join(map(str, res)))
    fptr.write('\n')
    fptr.close()

5)LONELY INTEGER
#!/bin/python3
import math
import os
import random
import re
import sys
def lonelyinteger(a):
     a.sort()
     for i in a:
        if(a.count(i)==1):
            c=i
     return c
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')
    n = int(input().strip())
    a = list(map(int, input().rstrip().split()))
    result = lonelyinteger(a)
    fptr.write(str(result) + '\n')
    fptr.close()

7)DIAGONAL DIFFERENCE
#!/bin/python3
import math
import os
import random
import re
import sys
def diagonalDifference(arr):
    sum1,sum2=0,0
    for i in range(n):
        for j in range(n):
            if(i==j):
                sum1=sum1+arr[i][j]
            if(i+j==n-1):
                sum2=sum2+arr[i][j]
    return(abs(sum1-sum2))
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')
    n = int(input().strip())
    arr = []
    for _ in range(n):
        arr.append(list(map(int, input().rstrip().split())))
    result = diagonalDifference(arr)
    fptr.write(str(result) + '\n')
    fptr.close()
    
9)PANGRAMS
#!/bin/python3
import math
import os
import random
import re
import sys
def pangrams(s):
    s=s.replace(' ','')
    s=s.lower()
    a=[]
    for i in s:
        if i not in a:
            a.append(i)
    if(len(a)==26):
        print("pangram")
    else:
        print("not pangram")
if __name__ == '__main__':
    s = input()
    pangrams(s)

11)SUBARRAY DIVISION1
#!/bin/python3
import math
import os
import random
import re
import sys
def birthday(s, d, m):
    count=0
    for i in range(n-m+1):
       if(sum(s[i:i+m])==d):
          count=count+1
    return(count)     
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')
    n = int(input().strip())
    s = list(map(int, input().rstrip().split()))
    first_multiple_input = input().rstrip().split()
    d = int(first_multiple_input[0])
    m = int(first_multiple_input[1])
    result = birthday(s, d, m)
    fptr.write(str(result) + '\n')
    fptr.close()

12)XOR STRINGS 2
def strings_xor(s, t):
    res = ""
    for i in range(len(s)):
        if s[i] == t[i]:
            res = res+'0'
        else:
            res = res+'1'
    return res
s = input()
t = input()
print(strings_xor(s, t))

 


      

